services:
  postgres:
    image: postgres:17
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: befrankdb

  api:
    image: befrank-api:latest
    build:
      context: ./case-developer-java
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/befrankdb
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/befrankdb
      SPRING_FLYWAY_USER: ${DB_USERNAME}
      SPRING_FLYWAY_PASSWORD: ${DB_PASSWORD}
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.forceSlash=false"
      - "traefik.http.routers.api.middlewares=api-stripprefix"
      - "traefik.http.routers.api.service=api"
      - "traefik.http.services.api.loadbalancer.server.port=8080"

  frontend:
    image: befrank-frontend:latest
    build:
      context: .
      dockerfile: case-developer-frontend/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  traefik:
    image: traefik:v2.10
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - api
      - frontend
